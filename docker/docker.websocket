# Multi-stage build for optimized production image
FROM oven/bun:1 AS base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    openssl \
    libssl-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

WORKDIR /usr/src/app

# Copy package files for dependency installation
COPY package.json bun.lockb* ./
COPY packages/*/package.json ./packages/*/
COPY apps/*/package.json ./apps/*/

# Development stage
FROM base AS development
RUN bun install --frozen-lockfile
COPY . .
RUN bun run generate:db
EXPOSE 8081
CMD ["bun", "run", "dev"]

# Build stage
FROM base AS build
RUN bun install --frozen-lockfile --production
COPY . .
RUN bun run generate:db

# Production stage
FROM base AS production

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Copy built application
COPY --from=build --chown=appuser:appuser /usr/src/app .

# Switch to non-root user
USER appuser

# Set environment variables
ENV NODE_ENV=production
ENV WS_PORT=8081

EXPOSE ${WS_PORT:-8081}

# Use exec form for better signal handling
CMD ["bun", "run", "start:ws"]
